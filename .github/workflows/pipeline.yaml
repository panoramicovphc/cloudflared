name: "pipeline"
run-name: "${{ github.event_name }} by ${{ github.actor }} #${{ github.run_number }}.${{ github.run_attempt }}"

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for running the workflow"
        required: true
        default: "Manual trigger"

env:
  ANSIBLE_PROJECT_PATH: "${{ vars.ANSIBLE_PROJECT_PATH }}"
  CURRENT_PROJECT_PATH: "${{ vars.CURRENT_PROJECT_PATH }}"

jobs:

  build:
    name: "Build"
    uses: "panoramicovphc/reusable-workflows/.github/workflows/.reusable-build.yml@v1"

  deploy-dev:
    name: "deploy-dev"
    environment: "dev"
    runs-on: [ "panoramicovphc", "self-hosted", "development" ]
    needs: [ "build" ]
    env:
      ENVIRONMENT_STAGE_NAME: "dev"
    steps:
      - name: "Resolve artifact name"
        run: |
          echo "artifact_name=artifact-v${{ github.run_number }}.${{ github.run_attempt }}.tar.gz" >> $GITHUB_ENV
      - name: "Resolve dropfolder path"
        run: |
          echo "dropfolder_path=${ANSIBLE_PROJECT_PATH}/_dropfolder/cloudflared" >> $GITHUB_ENV
      - name: "Resolve artifact path"
        run: |
          echo "artifact_path=${GITHUB_WORKSPACE}/${{ needs.build.outputs.ARTIFACT_NAME }}" >> $GITHUB_ENV
      - name: "Download artifact"
        uses: "actions/download-artifact@v4"
        with:
          name: "${{ needs.build.outputs.ARTIFACT_NAME }}"
      - name: "Extract artifact"
        run: |
          sudo rm -rf ${{ env.dropfolder_path }}/*
          sudo mkdir -p ${{ env.dropfolder_path }}
          sudo chmod 0755 ${{ env.dropfolder_path }}
          sudo tar -xzf "${{ env.artifact_path }}" -C "${{ env.dropfolder_path }}"
      - name: "Run Ansible Playbook"
        run: |
          cd ${ANSIBLE_PROJECT_PATH}
          ansible-playbook ./playbooks/deploy-docker.yml \
            -i "${ANSIBLE_PROJECT_PATH}/inventory/hosts.ini" \
            -e "ANSIBLE_PROJECT_PATH=${ANSIBLE_PROJECT_PATH}" \
            -e "CURRENT_PROJECT_PATH=${CURRENT_PROJECT_PATH}" \
            -e "DROPFOLDER_PATH=${dropfolder_path}"
